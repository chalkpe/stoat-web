name: Build & Test

on:
  push:
    paths-ignore:
      - ".github/**"
      - "!.github/workflows/build-and-test.yml"
      - ".vscode/**"
      - "doc/**"
      - "lifecycle/**"
      - ".gitignore"
      - "README.md"
  pull_request:

env:
  REGISTRY: ghcr.io
  VITE_API_URL: https://${{ vars.STOAT_API }}/api
  VITE_WS_URL: wss://${{ vars.STOAT_API }}/ws
  VITE_MEDIA_URL: https://${{ vars.STOAT_API }}/autumn
  VITE_PROXY_URL: https://${{ vars.STOAT_API }}/january

jobs:
  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: pnpm install
      - run: pnpm build:deps

      - name: Run typecheck
        run: pnpm test:typecheck

  e2e:
    name: e2e Integration Test
    runs-on: ubuntu-latest

    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: pnpm install
      - run: pnpm build:deps

      - name: Install Playwright Browsers
        run: pnpm --filter client exec playwright install --with-deps
      - name: Build web app
        run: pnpm build:web
      - name: Run Playwright tests
        run: pnpm test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: packages/client/playwright-report/
          retention-days: 30

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=edge
            type=ref,event=branch
            type=sha,format=short,prefix=
            type=raw,value={{date 'YYYYMMDD-HHmmss' tz='Asia/Seoul'}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_API_URL=${{ env.VITE_API_URL }}
            VITE_WS_URL=${{ env.VITE_WS_URL }}
            VITE_MEDIA_URL=${{ env.VITE_MEDIA_URL }}
            VITE_PROXY_URL=${{ env.VITE_PROXY_URL }}
